[workspace]
members = ["cli", "core", "wasm"]
resolver = "2"

[workspace.dependencies]
base64 = { version = "0.22.1", default-features = false, features = ["alloc"] }
clap = { version = "4.5.40", features = ["derive", "env"] }
embedded-io = "0.6.1"
encoding_rs = "0.8.35"
paste = "1.0.15"
snafu = "0.8.6"
strum = { version = "0.27.1", default-features = false, features = ["derive"] }
tracing = { version = "0.1.41", default-features = false, features = [
  "attributes",
] }
tracing-subscriber = { version = "0.3.19", default-features = false, features = [
  "time",
] }
tracing-wasm = "0.2.1"
unicode-segmentation = "1.12.0"
wasm-bindgen = "0.2.100"
wasm-bindgen-test = "0.3.50"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7" }

# workspace
wmf-cli = { path = "./cli" }
wmf-core = { path = "./core", default-features = false }
wmf-wasm = { path = "./wasm" }

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }

# allowed rules
doc_markdown = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
similar_names = "allow"

[workspace.package]
edition = "2021"
rust-version = "1.84.1"
version = "0.1.0"

[profile.release]
codegen-units = 1
lto = true
opt-level = "s"
strip = "symbols"
